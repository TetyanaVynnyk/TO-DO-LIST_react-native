{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  StatusBar.setBarStyle('light-content', true);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskItems = _useState4[0],\n    setTaskItems = _useState4[1];\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1\n      },\n      keyboardShouldPersistTaps: \"handled\",\n      children: _jsxs(View, {\n        style: styles.tasksWrapper,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Today's Tasks\"\n        }), _jsx(View, {\n          style: styles.items,\n          children: taskItems.map(function (item, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return completeTask(index);\n              },\n              children: _jsx(Task, {\n                text: item\n              }, index)\n            }, index);\n          })\n        })]\n      })\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: 'Write a task',\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar darkMode = {\n  backgroundColor: '#1D3557',\n  primaryColor: '#F1FAEE',\n  secondaryColor: '#A8DADC',\n  accentColor: '#E63946'\n};\nvar lightMode = {\n  backgroundColor: '#F1FAEE',\n  primaryColor: '#457B9D',\n  secondaryColor: '#1D3557',\n  accentColor: '#E63946'\n};\nvar theme = Appearance.getColorScheme();\nif (theme === 'dark') {\n  currentTheme = darkMode;\n  console.log('Dark mode is on');\n} else {\n  currentTheme = lightMode;\n  console.log('Light mode is on');\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: currentTheme.backgroundColor\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    paddingBottom: 10,\n    color: theme.primaryColor\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 40,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    width: '80%',\n    height: 60,\n    backgroundColor: currentTheme.primaryColor,\n    borderRadius: 60,\n    borderColor: currentTheme.secondaryColor,\n    borderWidth: 1,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowOpacity: 0.41,\n    shadowRadius: 9.11,\n    elevation: 14\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: currentTheme.accentColor,\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowOpacity: 0.41,\n    shadowRadius: 9.11,\n    elevation: 14\n  },\n  addText: {\n    fontSize: 30,\n    color: currentTheme.primaryColor,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","KeyboardAvoidingView","StyleSheet","Text","View","TextInput","TouchableOpacity","Keyboard","ScrollView","StatusBar","Appearance","Task","jsx","_jsx","jsxs","_jsxs","App","setBarStyle","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","taskItems","setTaskItems","handleAddTask","dismiss","concat","_toConsumableArray","completeTask","index","itemsCopy","splice","style","styles","container","children","contentContainerStyle","flexGrow","keyboardShouldPersistTaps","tasksWrapper","sectionTitle","items","map","item","onPress","text","behavior","Platform","OS","writeTaskWrapper","input","placeholder","value","onChangeText","addWrapper","addText","darkMode","backgroundColor","primaryColor","secondaryColor","accentColor","lightMode","theme","getColorScheme","currentTheme","console","log","create","flex","paddingTop","paddingHorizontal","fontSize","fontWeight","paddingBottom","color","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","height","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","alignSelf"],"sources":["C:/Users/38096/Desktop/Projects/TO-DO-LIST_react-native/App.js"],"sourcesContent":["import React, {useState} from 'react';\r\n// import { StatusBar } from 'expo-status-bar';\r\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard, ScrollView, StatusBar, Appearance } from 'react-native';\r\nimport Task from './components/Task';\r\n\r\nexport default function App() {\r\n  \r\n  StatusBar.setBarStyle('light-content', true);\r\n\r\n  const [task, setTask] = useState();\r\n  const [taskItems, setTaskItems] = useState([]);\r\n\r\n  const handleAddTask = () => {\r\n    Keyboard.dismiss();\r\n    setTaskItems([...taskItems, task])\r\n    setTask(null);\r\n\r\n  }\r\n\r\n  const completeTask = (index) => {\r\n    let itemsCopy = [...taskItems];\r\n    itemsCopy.splice(index, 1);\r\n    setTaskItems(itemsCopy);\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      {/* Added this scroll view to enable scrolling when list gets longer than the page */}\r\n      <ScrollView contentContainerStyle={{flexGrow: 1}} keyboardShouldPersistTaps='handled'>\r\n\r\n      {/* Todays Tasks */}\r\n      <View style={styles.tasksWrapper}>\r\n        <Text style={styles.sectionTitle}>Today's Tasks</Text>\r\n\r\n        <View style={styles.items}>\r\n          {/* This is where the tasks will go! */}\r\n          {\r\n            taskItems.map((item, index) => {\r\n              return (\r\n                <TouchableOpacity key={index} onPress={() => completeTask(index)}>\r\n                  <Task key={index} text={item} />\r\n                </TouchableOpacity>\r\n\r\n              )\r\n            })\r\n          }\r\n\r\n        </View>\r\n      </View>\r\n      </ScrollView>\r\n      \r\n      {/* Write a task */}\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.writeTaskWrapper}\r\n      >\r\n        <TextInput style={styles.input} placeholder={'Write a task'}\r\n          value={task} onChangeText={text => setTask(text) } \r\n        />\r\n        <TouchableOpacity onPress={() => handleAddTask()}>\r\n          <View style={styles.addWrapper}>\r\n            <Text style={styles.addText}>+</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\n//Colors for the themes\r\nconst darkMode = {\r\n  backgroundColor: '#1D3557',\r\n  primaryColor: '#F1FAEE',\r\n  secondaryColor: '#A8DADC',\r\n  accentColor: '#E63946',\r\n};\r\n\r\nconst lightMode = {\r\n  backgroundColor: '#F1FAEE',\r\n  primaryColor: '#457B9D',\r\n  secondaryColor: '#1D3557',\r\n  accentColor: '#E63946',\r\n};\r\n\r\n// Find out what the current theme is using appearance\r\n\r\nlet theme = Appearance.getColorScheme();\r\nif (theme === 'dark') {\r\n  currentTheme = darkMode;\r\n  console.log('Dark mode is on');\r\n}\r\nelse {\r\n  currentTheme = lightMode;\r\n  console.log('Light mode is on');\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: currentTheme.backgroundColor,\r\n  },\r\n\r\n  tasksWrapper: {\r\n    paddingTop: 80,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  sectionTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    paddingBottom: 10,\r\n    color: theme.primaryColor,\r\n  },\r\n\r\n  writeTaskWrapper: {\r\n    position: 'absolute',\r\n    bottom: 40,\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  input: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    width: '80%',\r\n    height: 60,\r\n    backgroundColor: currentTheme.primaryColor,\r\n    borderRadius: 60,\r\n    borderColor: currentTheme.secondaryColor,\r\n    borderWidth: 1,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 7,},\r\n    shadowOpacity: 0.41,\r\n    shadowRadius: 9.11,\r\n    elevation: 14,\r\n  },\r\n\r\n  addWrapper: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: currentTheme.accentColor,\r\n    borderRadius: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 7,},\r\n    shadowOpacity: 0.41,\r\n    shadowRadius: 9.11,\r\n    elevation: 14,\r\n  },\r\n\r\n  addText: {\r\n    fontSize: 30,\r\n    color: currentTheme.primaryColor,\r\n    fontWeight: 'bold',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}